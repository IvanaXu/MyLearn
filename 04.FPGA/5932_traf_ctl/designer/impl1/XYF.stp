NOTE "CREATOR" "Designer Version: 9.1.0.18";
NOTE "CAPTURE" "9.1.0.18";
NOTE "DEVICE" "A3P030";
NOTE "PACKAGE" "A3P030-vq100";
NOTE "DATE" "2014/01/11";
NOTE "TIME" "18:49:22";
NOTE "STAPL_VERSION" "JESD71";
NOTE "VENDOR" "Actel Corporation";
NOTE "IDCODE" "049011CF";
NOTE "IDMASK" "07FFFFFF";
NOTE "DESIGN" "XYF";
NOTE "DESIGN_DIRECTORY" "D:\Actelprj\1401\5932_ traf_ctl\designer\impl1\";
NOTE "CHECKSUM" "4C51";
NOTE "SECURITY" "Disable";
NOTE "ALG_VERSION" "20";
NOTE "MAP_VERSION" "1";
NOTE "TOOL_VERSION" "1";
NOTE "MAX_FREQ" "10000000";
NOTE "SILSIG" "00000000";
NOTE "TRACKING_SAR" "76713";
NOTE "SPEED_GRAD" "-2";
NOTE "TEMP_GRAD" "COM";

ACTION PROGRAM = 
       VERIFY_IDCODE,
       SET_PRG_ARRAY,
       W_INITIALIZE,
       DO_ERASE,
       DO_PROGRAM,
       DO_VERIFY_BOL,
       DO_PROGRAM_RLOCK,
       DO_VERIFY_PGM_RLOCK,
       DO_EXIT;
ACTION PROGRAM_ARRAY = 
       VERIFY_IDCODE,
       SET_PRG_ARRAY,
       AW_INITIALIZE,
       DO_ERASE_ARRAY,
       DO_PROGRAM,
       DO_VERIFY_BOL,
       DO_PROGRAM_RLOCK,
       DO_VERIFY_PGM_RLOCK,
       DO_EXIT;
ACTION ERASE_ARRAY = 
       VERIFY_IDCODE,
       AW_INITIALIZE,
       DO_ERASE_ARRAY_ONLY,
       DO_EXIT;
ACTION ERASE = 
       VERIFY_IDCODE,
       W_INITIALIZE,
       DO_ERASE_ONLY,
       DO_EXIT;
ACTION ERASE_ALL = 
       VERIFY_IDCODE,
       INITIALIZE,
       DO_ERASE_ALL,
       DO_EXIT;
ACTION VERIFY = 
       VERIFY_IDCODE,
       R_INITIALIZE,
       DO_VERIFY_EOL,
       DO_VERIFY_RLOCK,
       DO_EXIT;
ACTION VERIFY_ARRAY = 
       VERIFY_IDCODE,
       AR_INITIALIZE,
       DO_VERIFY_EOL,
       DO_VERIFY_RLOCK,
       DO_EXIT;
ACTION READ_IDCODE = 
       DO_READ_IDCODE;
ACTION VERIFY_DEVICE_INFO = 
       VERIFY_IDCODE,
       READ_INITIALIZE,
       READ_IDCODE_ONLY,
       DO_VERIFY_DEVICE_INFO,
       DO_EXIT;
ACTION DEVICE_INFO = 
       VERIFY_IDCODE,
       READ_INITIALIZE,
       READ_IDCODE_ONLY,
       DO_DEVICE_INFO,
       DO_QUERY_SECURITY,
       DO_EXIT;



DATA CONSTBLOCK;
    INTEGER IEEE1532=0;
    INTEGER STAPL=1;
    INTEGER DIRECTC=2;
    INTEGER PDB=3;
    INTEGER SVF=4;
    INTEGER IAP=5;
    INTEGER FP=0;
    INTEGER FPLITE=1;
    INTEGER FP3=2;
    INTEGER SCULPTW=3;
    INTEGER BPW=4;
    INTEGER DIRECTCP=5;
    INTEGER STP=6;
    INTEGER FP4=7;
    INTEGER FP33=0;
    INTEGER FP34=1;
    INTEGER FP40=2;
    INTEGER FP41=3;
    INTEGER FP42=4;
    INTEGER FP50=5;
    INTEGER FP51=6;
    INTEGER FP60=7;
    INTEGER FP61=8;
    INTEGER FP62=9;
    INTEGER FP84=11;
    INTEGER FP85=12;
    INTEGER FP86=13;
    INTEGER FP90=14;
    INTEGER FP91=15;
    INTEGER UNKNOWN=127;
    INTEGER UNSPECIFIED=0;
    INTEGER QN132=1;
    INTEGER VQ100=2;
    INTEGER TQ144=3;
    INTEGER PQ208=4;
    INTEGER FG144=5;
    INTEGER FG256=6;
    INTEGER FG484=7;
    INTEGER FG676=8;
    INTEGER FG896=9;
    INTEGER QN108=10;
    INTEGER QN180=11;
    INTEGER TQ100=12;
    INTEGER CQ208=13;
    INTEGER FG1152=14;
    INTEGER BG456=15;
    INTEGER UNDEFINED=63;
    INTEGER GRADE_UNSPEC=0;
    INTEGER GRADE_1=1;
    INTEGER GRADE_2=2;
    INTEGER GRADE_3=3;
    INTEGER GRADE_F=4;
    INTEGER GRADE_STD=5;
    INTEGER GRADE_4=6;
    INTEGER GRADE_UNDEF=7;
ENDDATA;

DATA PARAMETERS;
    INTEGER FREQ =4;
ENDDATA;

DATA GV;
    INTEGER ULOPT1_BITLOCATION =11;
    INTEGER ULOPT0_BITLOCATION =10;
    INTEGER ULUWE_BITLOCATION =9;
    INTEGER ULARE_BITLOCATION =8;
    INTEGER ULUPC_BITLOCATION =7;
    INTEGER ULUFE_BITLOCATION =6;
    INTEGER ULUFP_BITLOCATION =5;
    INTEGER ULUFJ_BITLOCATION =4;
    INTEGER ULFLR_BITLOCATION =3;
    INTEGER ULULR_BITLOCATION =2;
    INTEGER ULAWE_BITLOCATION =1;
    INTEGER ULARD_BITLOCATION =0;
    BOOLEAN BUFF128[128];
    BOOLEAN BUFF32[32];
    INTEGER I;
    INTEGER J;
    INTEGER TEMP;
    INTEGER SDNUMBER;
    INTEGER ROWNUMBER;
    INTEGER DATAINDEX =0;
    INTEGER FROMROWNUMBER =1;
    INTEGER AESBLOCK;
    BOOLEAN ID[32];
    BOOLEAN PASS = 1;
    BOOLEAN FADDR[3];
    INTEGER STATUS =0;
    BOOLEAN SILSIG[32] = $00000000;
    BOOLEAN ISC_CONFIG_RESULT[18];
    BOOLEAN VERIFYEOL[2];
    BOOLEAN COMBERASESELECT[23];
    BOOLEAN SECKEY_OK = 1;
    BOOLEAN SECREG[44];
    BOOLEAN ULUWE = 0;
    BOOLEAN ULARE = 0;
    BOOLEAN ULUPC = 0;
    BOOLEAN ULUFE = 0;
    BOOLEAN ULUFP = 0;
    BOOLEAN ULUFJ = 0;
    BOOLEAN ULFLR = 0;
    BOOLEAN ULULR = 0;
    BOOLEAN ULAWE = 0;
    BOOLEAN ULARD = 0;
    BOOLEAN ULOPT[2];
    BOOLEAN SUROWCHECKSUM[16];
    INTEGER SUROWCYCLECOUNT =0;
    INTEGER ACT_UROW_CYCLE_COUNT =0;
    BOOLEAN ACT_UROW_DESIGN_NAME[70] = $0102040810204366b1;
    BOOLEAN SUROWDESIGNNAME[70];
    BOOLEAN SUROWPROGMETHOD[3];
    BOOLEAN ACT_UROW_ALGO_VERSION[7] = $14;
    BOOLEAN SUROWALGOVERSION[7];
    BOOLEAN SUROW_PKG_TYPE[6];
    BOOLEAN ACT_UROW_SW_VERSION[7];
    BOOLEAN SUROW_SW_VERSION[7];
    INTEGER PLAYERVERSIONVARIABLE =0;
    INTEGER SCULPTORMAJORBASE =4;
    INTEGER SCULPTORMINORBASE =50;
    INTEGER PLAYER_VERSION_VARIABLE =0;
    INTEGER SCULPTOR_MAJOR_BASE =4;
    INTEGER SCULPTOR_MINOR_BASE =50;
    BOOLEAN ACT_UROW_PROGRAM_SW[4] = $2;
    BOOLEAN SUROWPROGRAMSW[4];
    BOOLEAN SUROW_SPEED_GRADE[3];
    BOOLEAN SUROW_SRAM_DISTURB[1];
    BOOLEAN ISERASEONLY = 0;
    BOOLEAN ISRESTOREDESIGN = 0;
    BOOLEAN FLAGDISPLAYCYC = 1;
    BOOLEAN ISPRGARRAY = 0;
    BOOLEAN BSRPATTERN[288] = $9249249249249249249249249249249249249249249249249
        24924924924924924924924;
    BOOLEAN SAMPLEMASK[288] = $0000000000000000000000000000000000000000000000000
        00000000000000000000000;
    BOOLEAN BSR[288];
    BOOLEAN SAMPLE_DEVICE[288];
    BOOLEAN RLOCK[416] = $7fffffcffffffbfffffeffffffbfffffefffffffffffffffffffff
        ffffffffffffffffffffffffffffffffffffffffffffffffff;
    BOOLEAN ARRAYRONLY = 1;
    BOOLEAN CHKARRAY = 0;
    BOOLEAN FROMRONLY = 1;
    BOOLEAN CHKFROM = 0;
    BOOLEAN CHKNVM = 0;
    BOOLEAN CHKSEC = 1;
    BOOLEAN PERMLOCK = 0;
    INTEGER HEX[16] = 70,69,68,67,66,65,57,56,55,54,53,52,51,50,49,48;
    INTEGER NUMBEROFFROMROWS =8;
    BOOLEAN INITIALIZE_DATA[5] = $00;
    INTEGER SDTILE;
    INTEGER NUMBEROFSDTILES =2;
    INTEGER NUMBEROFMAPROWS =625;
    INTEGER IDREV;
    INTEGER IDFAB;
    INTEGER BM7DEVICE =0;
    INTEGER BM1DEVICE =0;
    BOOLEAN M1BUFF[128] = $acdd6548ccb488863e291eb18fe95077;
    BOOLEAN M7BUFF[128] = $e137623a2eeee91126015f3f73664945;
    BOOLEAN IDCODEVALUE[32] = $049011cf;
    BOOLEAN IDMASK[32] = $07ffffff;
    INTEGER SECKEYCHK =0;
    INTEGER DESIGNPKGTYPE =2;
    BOOLEAN ACT_UROW_PROG_METHOD[3] = $1;
    INTEGER LABEL_SEPARATOR =0;
    INTEGER ROWITERATION =100;
    INTEGER PAGEITERATION =100;
    INTEGER PERCENT_UPDATE;
    INTEGER DIFFERENCE;
    INTEGER UNIQUEEXITCODE =0;
ENDDATA;

DATA ECCCHECK;
    INTEGER SYNDROMETABLE[256] = -1,97,98,-1,99,-1,-1,100,101,-1,-1,31,-1,102,30
        ,-1,103,-1,-1,29,-1,28,27,-1,-1,26,25,-1,24,-1,-1,104,105,-1,-1,7,-1,6,5
        ,-1,
    -1,4,3,-1,2,-1,-1,106,-1,0,107,-1,1,-1,-1,108,109,-1,-1,110,-1,111,112,-1,86
        ,-1,-1,87,-1,88,89,-1,-1,90,47,-1,91,-1,-1,46,
    -1,92,45,-1,44,-1,-1,43,42,-1,-1,41,-1,40,93,-1,-1,64,55,-1,54,-1,-1,53,52,-1
        ,-1,51,-1,50,65,-1,48,-1,-1,66,-1,49,67,-1,
    -1,68,69,-1,70,-1,-1,-1,71,-1,-1,72,-1,73,74,-1,-1,75,63,-1,76,-1,-1,62,-1,77
        ,61,-1,60,-1,-1,59,58,-1,-1,57,-1,56,78,-1,
    -1,79,39,-1,38,-1,-1,37,36,-1,-1,35,-1,34,80,-1,32,-1,-1,81,-1,33,82,-1,-1,83
        ,84,-1,85,-1,-1,-1,-1,113,114,-1,115,-1,-1,116,
    117,-1,-1,15,-1,118,14,-1,119,-1,-1,13,-1,12,11,-1,-1,10,9,-1,8,-1,-1,-1,94,-1
        ,-1,23,-1,22,21,-1,-1,20,19,-1,18,-1,-1,-1,
    -1,16,95,-1,17,-1,-1,-1,96,-1,-1,-1,-1,-1,-1,-99;
    BOOLEAN ECCSTR0[120] = $ad2aadea7554eab4d1b4d14b2e4b2e;
    BOOLEAN ECCSTR1[120] = $eaa2eb5d68bad11557155715571557;
    BOOLEAN ECCSTR2[120] = $a66aa7d4daa9b5a699a699a699a699;
    BOOLEAN ECCSTR3[120] = $9e1a9ed3c6a78d38e338e338e338e3;
    BOOLEAN ECCSTR4[120] = $7e067e4fc19f83c0fcc0fcc0fcc0fc;
    BOOLEAN ECCSTR5[120] = $fe01fe3fc07f80ff00ff00ff00ff00;
    BOOLEAN ECCSTR6[120] = $01fffe003fff80ff0000ffff0000ff;
    BOOLEAN ECCSTR7[120] = $01fffe3fc0007f00ffff00ff0000ff;
    BOOLEAN TEMPECCSTR[120];
    BOOLEAN TEMPECC[8];
    BOOLEAN TEMPPARITY;
    BOOLEAN TEMPDATA[120];
    INTEGER ISMARTERASE;
    INTEGER ISEITERATION =10;
ENDDATA;

DATA BITSTREAM;
    BOOLEAN UROW[128];
    BOOLEAN UROW_MASK[128] = $fffffffffffffffffffffffffe01ffc0;
    BOOLEAN DATASTREAM[260000] = @qx700ejfjb0000uR@VVIIIaORRrs0000yts@@a499fDRRh
        0000Ors@dMp02000WRR@rHIIYC0000JIYa4IIaa003A099998999200002000GaaK31o000g
        v0OIII4000gW010003SWaaaa9C0400GDYeB4C03qsssYMosc8999A0000jjjQpbaPRGIYaS0
        000tcjjrIaib8III20000ORRRZ99RBaaaarHWaaa4JsIIKRRRrHQJY499HIcj59XsMjjcsC9
        fa899pgjaLpsssXssaEIIIIORB9bjjjPhjDHQ00m2H000400o4Ia20000IIMR58I89j6C020
        000JI8Y100r01P51aaI600000GI0e1AGII0000009002rM2Wa408000K370aa0i6C8E9mD0j
        TSI001080000O1QR5999H0I00m0000A00R1aa8931G02000080Ws09III0W400ssssWrkjPJ
        IIYy@zlVjjDRNlPssba89vRx@@scjjfcjRFJaaauwV@xPRRRhRRso9999Y@s@QW0l@jjosss
        itIsgTRRpsP@hskjDRRkaQRpjPRR@xVRtcjjjdaijCsssso@@szRRRp89Pp2000020W106rW
        2YPAC0K1W00GduYeX5j8260h1100eryGE1320G0f1560@aM98RzHD0dEJ1554Y64C069D8Y2
        2Q6063800GEHDnLq4DKJQm6Hd4SIGHE1K1QqakrKEH4z29a7vKGpBh054RTLkp3H3pWaaa49
        999KIII4aaa8B99HYII2aWa49P99IIaaQW30119HIoI2aae49998II2Maaa4I3ae6WWq04aW
        ag8989e6uXKR2o9m0404G8bS2QOZ4W0WI0B4F2co6WqqYZy0O01028PK11D69RH22IIIg1KH
        G398890b6u00999f1i8dm4X0GG0040G2GWQTKG00okjP1Wsssi50000QRps6000WiDRRd0A0
        aifRR3020mcjjj51618qUssSX80g1G0RRRR8999ojjjPaaa8XsocjGIoOI2q999H2O1nM0G8
        IYj5RRa489XsWjb0Yba4mYsM92GI2RJRRE9891jjjPdaa4fsssWW3Ocaa8namLRt4c9mqOjb
        JAcaGOWqM012I1M0PBaXB910000E999X0000aaayI91IIJI40000A99HY0200kf8Jg00r08O
        C91o2JIb0000Af9HA@tl@Xa499@@XKBm@@@FJ2IIm@@@XK9mV@@D0H19m_y@kaaa8H@RxNJ6
        Y4WDj@@81II0040WQrss20000KRRR70400ijjjA0000rssgL262Wac4j52200OJqsE1P28iP
        QRg0D0W5Dljb8BdCYXZvK45CWWbakC3uWr0DyMnYpXC80208k03Z1Ou9O5Y000GG00iSGXi3
        FSBK340G0H0AW200m9KKwBoGg2D6HeW000WN6JSQm01000v4M8D03r0Seam3f1geJG5040Go
        0KmkIJ0230yCGXyLQKgmW88LqM8ZE1EW000fjm514OGG00GD02chuImj6s0Sm2MGkCm08W0W
        31Da7XZS2CCjDah044e9Ze1Na6eWy6Ti30ZP26iIOYG3Uyc8XaEDa6eZG3846nYz6GyaGZMZ
        h42I8r0eGu050440OU15grGZQ0IueX5G200WaaaK999P1E78199BKd5WWabaZZ24a4b09915
        gp3JwHWaaaCA999XwWGD040IKI8DW24aaa4g34v4K1018WXq0vL2BI3mWr5QetY3w40YRA80
        200GOBHir27f1SGG3q0200e6W4kB02GG00XJ0Y000emZSWWeaKuHIWbaaiX12oMm09999KGJ
        I2F2Zq0We6W2mMIIW4Xai6W3IYyWS2_0G00md1E0eijDye4020q6U414GosijT1o40oczjD4
        O00Rs_sM0e60GRBRp4aH0ajbDxij5RYaaV5HmzY4ejjjDye2GRda899a10R34089J5biHa4a
        4m6os2JYIY23Ohg8O9IijjQvaaC9qs6U41ersciDIIWaSRJsc99I2iB1os8ALIWvWRp05i94
        CWj5cKW4960qCQQ22Fo0Jc003AGGuH5q5P1WIIMa8100WRIna8040099GJA000WkeD91000W
        oqcaY@@@VGI2Ia@@@j999HY@@s@caKuH4edaa49utl@1a889xhy@IIiW4zPw@5H0IAijj@38
        a910080KRRQJ0000XjjDp00amZM00Q1WQJQRY094Gif9PtWM00qcajLHh4mIJqs2030S4011
        WwKMvFfAwW1XvqYOUbBC000aDMA0o00IOP300A0b0SW000mq0KW00GmW1JC40175WGI5Ka6W
        3L1O0010WsLS8dW6Y40Yq0GeU352JGYfIAeA17gBm0181013OGv1GC4m15EHGL2Ha6G19l42
        G20WbJW8djGA5mWf280800KQ0FKQI49MHHm9UW00Ge6W2k5eWD2U8W6EYQAXZi2vVX28110q
        Lm1J3G0G00XP0E0H00mk5Ta6W2@RAH404iUb5j5K1G00Wj5iuR028400KEG3D0GG5068008O
        keCc0za@INP00BG100a6GCv48IT36q0W10200_LeXM7Q8fYB80004ZP4Xw8HL9KW0208S952
        sYZz0G8ye60H004gJ2aeaaQpPXSS8W04a5999HWaaaX7TWqaaCD999KIII4W4W4g32GIIK2r
        vWw7H8uH524KZCc0fT17o0Zak0CO0X3YG815000fE42G01Wm9sADjNo8eW8yS8eX3iWaa4q0
        41SsGD0681999un5iaaa4mP609993QuYCCa19WbTuH5aLD1004C2FY0W8WaJ7I0208Rtss0G
        40ePTRRHO400jijDVmH0Gspsipsai8I2yL414III4GRRpK89H2ejDQxa459XjGRRaW98Pgaj
        DW8aa0MYsM06IG4Q8Qr1P1GYjbKBdaa9WsMj5JIc4GRrqI8H22pLJPH698fKO8BRkX991e2j
        Pt4Y4foO6i12IiaPG2s01OI20080EHIIZGZZ4GJQ18pn240008A99HY0040EX9IY12W0qKC9
        f0G00Ioaa42000A2RI2_@pl1999G_@@dba445_@RNRIIaK_lvFF9HIIyJl@3fGIIKJzyN829
        9q7t_p6aa4mVVlFo0Ia000Wessej00G06RZss1GuH4mc2010IjDRJC810GfIRRn0D00e9jjJ
        m040sqsN5GB2WQJQ3FwbdAGuxnCoYuW9US8FZ7owKXTsg83W2G0G0qn2Dn4SmaEDSV12G010
        0081qAG6GW00IDp2W408X2SmY6I4Uq6G200YFe10140vffHa0709008i656exZZ08OPA3088
        0LkW1z7G0802W6JW8N4708804221f1CHw6RW008eEc8oMeWCPU8vW54100aFf6X7jHN1AiHm
        3v48H907yFJ1TAmmB260e00e803YyCXSSIe602sSu1GW00JH2nN05i0G14080chdWX1AWX00
        mc090801ee0FkCf001WWFPGH55P4QG2JeSGy4BCqJ23Ra02000W0000I02Mbe1G020FBa020
        2Wu4g0G20GQ0H4NCFXwe1A01Wo0l8D0A02W0K3045eH2012WS1KOC0E_G8X51n8d05IEzXU1
        Ce1D2W200ajS5f2HId0AWaaWK999H1E9W0baC774GG0Iga4a42198YIIIaaa4vuK0199BIIQ
        2LxK0fH9fsSQW9P99GIaamZ80aeaKD050999bIIHYWa4amZo8m032jkWyl_ewW7AMmW4h49Q
        12Ew4Y42KOUX4Qd8Zq0a8SYFQCXZ_rQO82AI3O18008XM7ID0DqEb2O91Iggw0GIGIcaiaI3
        01O999f1GWO2IoQ0AeJ05wjYWB4EeOb8QPn36WKsijj1031I7U41A13Qrss60C5bCuH2010P
        pst60mG0DRvPBWsO0ejjiP0HL0osNdTscY1HI22YR3sY89HG1j1B3X498ec5fXJaWq4iXaiX
        40W8tMMcHQMa4OI8s2184Ij48Qda8A9sc4aSYma6QMMUEIOOQPBBB3918GkDa1pag21gb0OR
        aS19ma0kTI3YaQ1Gp6903Ikk0OZ8a09000Wm99F9400GaaqaC5000IIQoq0WAy82q80W0WJQ
        3c8W090993JA004Wc8jB1G01WY6MaW@xxOGI2Ja@zvW9981Y@tsnc448W@HsoJIaK4@ji@GI
        WXaNP5@DImG2VjX@49181V_yxZm15900C8gj9xA0G00msefP0GGGOptsM0O0AARQQh28R1KR
        JRJ0f90WD99x2a20mscej0Gr0KRYrM0OlnIsivXzlwup6C2LzYh0OeW54_A1ZxYIO9W2IIk0
        0120j3iGfD7KFG353Um37CSKm1Zle0100WmZQeR03I3014004f1e0804WA__Oif36@fWD4GO
        8VFQAiWS28O_W2ArNYvRGOA8C2PeW2Z88a53I4e09G00vhq1W10Wq0Y8TGAELWWqRtug1BI4
        W08G00h1SW00000200n2aW000ao2C8FW76kwZiDf8b62Qu4XD4I8RQ44004W0G0eBX6YEe00
        2G0fFLmC040402uO2BwnKXq0E83X30e0000068FW2Mn4XL2I8DW42EAXt0808000100WdTP8
        ioHMBeW@hhORK8wD8X90GuV23oqgXq0ku435I30XI9See08_kAYWkzeHhGg1m1G000tJim96
        8KUK8FcAnM0EKym1LQV080000300l3SGrYAa805bD3H445SB018W00ADOY1xB010YmWwKK@8
        50200GI3Gsue1A899Bm91WWba89HIqaab819nH22IWaWaC19GBr0G0989hGTCeMm28O19HIm
        IAD04ab4a8GIIYWaaKFFAe5Xa4019PWWGaX14vU4n@G9iaO4X1OG5k4a101J2GmV25C8A2Zb
        aGd0BS8t3fEK0m00WGHNAigAgFXZXhm8D0AQD21MIGI1Da0PP9BIIGYr0O0GIII4Wa08B99n
        YII6UK1WaW4I38XmnD09A9922I6iabaA9HI27tWW6EW0ie4919eGgI8qWPGGssgj1W1KGRhM
        s20X40jXMJ0WaiDxR7083WiPFR306IWk2924b0qgrjD0O90fsssEssMsGI11XR39o89820jX
        5BX4K9fssijJI5a4sAWjHWaXaB6os8I0G2QJHQ19P9Hj5bKda0GuH58f5ZcndaZ4aqMsoasG
        I2OaRR9oCf90WBZCsE95I2jX0Qd484fs2XiHY4aaZMIs8I1O200C1SIIo210a499DDI1GWmZ
        A00805998HG0q0E9X9ZNX09l9f00G0aaKa4QD1acs4yV6O3IIIYyFNcC911QyVtysaY01yVZ
        sUIYyaykUu7IanayUNxFH2GIu@zyd99g9u_cUVam081009GjjHQ1W040scT930Y62Rssq200
        GGPJBR50I0WQRIR24b90ijDP70q00ssaj521IWQJsq2030W74W0WD_re648kQ3ZTmQ8De302
        000100wd578004cU12l3OGg0ByZ321Rbm@xC49G1XJ8HerSK3m2D7HHf5KKLG1p0u0I00WfP
        ke8x4M0mWjaLeKH3UC6Xs2Q8DW54800K_t1dbamz0Aa603P0O0a00WE0KuVPBIEmYgh1X00A
        IFDHCeo1bAanTFHKqY1DCK110AWk0GeK06QUm081010200UGW05000j6S0I00Wm6Qe702010
        0H000ePY3QIm0G400rPgmO07aKt403206uX22000tJWGObO0P08urX408W0q1n2f0GGV07W0
        00CKYD60e01100jLx0200miBG8DQKEb7arSM8J6LYtdWQ0i0C20GD0MyN92p1a0400W3FK8U
        W2IO0XL3W0G04GA040100yqm4wvIY0VCucC7c4uXX0K0142GLO64NR40X00c87ZwjAeTW7GI
        AG6Qj1O899HMII24ba491993oIIaa81IGo2oBAXmaF0aWa59891aqWajLJGQ05i@81KI2IQD
        o01IIIzB7X0a4aGTAuyW2A0rXy9nuT@8W0004xG3H64Hx3Fqbo3VjoGKKIa7m1dVymn0EqKH
        55ijHTGTq9P6X7jXqaaWI58WiaeKmZF0jaaERX38a6a88P99SS4a6ae89198D040IGIYaiaC
        9f2KIII2jaaiF96GIMG6Uq1XxTmiNK4Qm2D0O010400O0OX7H0GG5QssMM0WWa2jk0O8PRs_
        EuXA0unos601e1DVRRB8YY0ekljPe0Q0ooscTs6c4GIIIaR3cI89GW2jPB9X499fcjDiJaaa
        4CeWjX8Ca8tq2aH0G24ARAq2310IjiGQd8W19scC4SYmqGQMMIEIIAIPRRH39510kjCCmaW0
        0Ec5Gx0c09KGeaTAYKaweGo611GIE4DOZ0fX90044Cqw20989PIR1W04a49jD0004KaiK413
        00umqc42400G2IQaY004851PI0A00eq4P9ylwY2IqqWy_@WFH2I0u@ybb9910u@_Mzaa4Avn
        kiFC4W9vspsVoY4auAVplHo2Iu0hzV8899108AhQRQQ004W8ijDn700Y5sccl500KaQRsoA2
        Gc0Qaqs2GG90KQRQ78840CfjjAa040rqq4Uq4dGaGownC6m5l0OH85C8G00u0HG_sOah8I8Y
        45QiG10200I0W0GW00j8G4xVS0190We1W0W002000ecECO_L2U2HX8gTeu3AgreWpwS8XxD6
        9OX4190008GxFG4X14n2GW004ak3C0100IX2F42I1f1GHer7qxI4X6mG_0BKQ329BdGuHRiO
        W2f1GmW1DqWm1P2OW0W0WlWJup17EwnWr0O0400mpG7WW208lyAw0wWi3Gu3Y48001KRh6KK
        02ULu02000Y000WG00SnG240082NWXYY805G0mt4By@D22000Y1eXVAcu0I3o1WWtaK8qw8Y
        1GXuhCW04Gmz09SuW3RIC12G0WxWLOpX5U_XWq0C8Mf92FYXq0Q8U3E6RW0W00WH7Kne044G
        Z6PZTGn7JaGg73aKoI0X0e0008002040GW010x3O1G00WJtL8IP6oMxYQdK0811G2FP4vb3X
        wSHer5GM2IAuH5mGMIoW490GIMI_n4aZZ1XMRG_n548e1f1O098Bfq0E0BP99024aQ1F0a4a
        489Bfab90B199IoGoGhHO2p2kHVXG3MOfaC6GmWxWY8QE7wZOX88I0280ma0FaWm13Pj000G
        aPK2f30CQ3DbWwkeJW5o1m04G0W1lrGG35e9999qQBGGIIYWaa4A99122MIajaar0OWIo2oW
        6E8D0AW899b6W1r0KGQ04GMI2Yaba5199XCCYfPq22Fg00GKqijjb00015UK1WKosijT8GW0
        mk29242sswjjW483Ghsss1WA5aQBRxORQ9291f0kjj1Zaa40qssa5IIWYQRpaE9HI1O9Mm61
        G0GiQGRZW808ejif54404noYKLIoIaORP5p99H3fjLBzaa1XrMjOCIaCKSrq2WH2QAq2G2c3
        FIIO999sP98Oebb8BKW08nAcWDI2aY200GYJ2FY000IIaqK0UkW0q4008WA9HIY0004ELJVY
        8050495990021aaca81090KQQYK_@V1399IG_@jhda898_t@IQYa66UVlJEIIIQSRRp3AG0Z
        SzbjBDH9IyqnutaWe9SRHsFA3a4000CeMjDD000G0rcsc100I0RRRZ2018IjjfI5iXOGDfPR
        10200scih30200Jsss2G82OPRQQ8kneIYTZY001220GlscaTb2P2S0WG1WSCQOIW56Qf1420
        HDBjmt0ECZh1LU8H45D8010O746IhPYkxI06002000aK3C0W00Geb5K_n2N34nWi4a402080
        HgIQadbN8L15WW404WM71QeGoFAa6m1P0UGoBIq9G6G000UA8Z32DG8400K01W318GG00mtY
        ISSI4H3SmWEJy1G2rwvGd05880Wi2X36GxWs2Q04000W00WrR8ePY3g10XA08unA4MWoX6XE
        uoV4We00yaD2G400Q3eWc080Wa0GdoMSNm3jJlGQ0Aa403D1RGEeFa6010C00QWfZ928O312
        IDeWY0Q8OOAsfn12GG0f1WnfGRi101H1KnRZByqq3rqeImZO4CP6D8HIu4L0G0We602IUuWu
        1AeRB72VLXs2a8dv2YRuWS788sY4IIgW14MOqT408044UK5aeaa2rf2iWaa2899XImIYWaa4
        v98HD0502GoAy84I3mYK080aeaC9989HIMIaa4b0991biC1X7XGf2LiUP1r0SG4664wn31Gp
        ID0SC9x3XMZKD0PyWb5nS4HD0Ka_G2PBy0JKIoW7P8aA5QOOXW6CWWeaKG3Iq9m1GIG2g1GX
        ao98y87_ZeWOBUewW8AAW0mWKsX7H00WsMjj50012Q3jc039PRssE8130Ppst605K0DVVTB4
        6E0ijjivWfY0oooZTssW1HI2qYRRso89HA1jPP1X49XecjfaJaa40CfXjX04W8sKMcH2Ia4I
        J1s2016Iia0Pd8OH9scbnSY4c4Qso0EIIJRPRRX29f8Hkjb5na440kW0Oxi609smYgT210aA
        12n6BGHIC4ASZ841900WWAye28889HII104Wa49fD0000Kaaq61802uabY420A1G2AAa04W0
        89fPI2A24eqcb9ylNN4Iaamy_l3EHIIIu@dBa9990u@t7zaa40vdtnFaqG9PVJuVo35bu1Nn
        l9I0Iu4btV84G8100HWQRJR200e2ijhH60GW9ssaz500GYQRssAGW60Qbss2G8G0KJPQ70X9
        0ij9jAaM60raq4yO23vhn00kior7jLGoAU6qc4DZ9nn0640400wb_3c2W04102r1QGPpHiX0
        2hPOGVU84dZ1f1mGUUJ4RG3fxf0G00n2Egen03k101020W12imFF7SPC497qmW8ESiM14040
        Q1eWsgB8DW94024a605TFlmDQKK3018001AEm180G004W0s7oXy4GG020mz0Dq402G0W0YZ4
        18000nCh008800400nBMmwp90800Pk45QB8XhAM04e0mg2L03008Ou5UzX14800zlO01900G
        810B3GmiKRic830200883000a10801uA05G0008y856K@Xn2E0K00m004WH008C02sQmWmZe
        8yN4k8e0fG00DOWGE14yoU330emmJ6Kfq12a0028eW21AW4W00801WBeX8DW84004iUL1f1a
        0O00WGgyG010000009000a00Ga8000G000620GanNay15GI00w5dYq0k87W6_9P2030031eH
        Jg4yvq175eW800mC5SG00WGG254yU204Y02FoXGuV8G020804y001@fUGT6800G0eEe4C000
        46M87CG0IIowmZAe073819AHGI2Yaa45989Haa4WA999XGosY0aa4PB9AIGIIi44401A93rX
        0KIII04baI3812GIGaaai81f16g31GIIKI3W080sIaX4X0011H0ImAKd2WG00G020en036B0
        Xg5L8d06QAfXuTBeis4ESN1a000T0Smi7802048zs6cVA10Y20PAvm3AI4EX4JPOG0JLKkKA
        rdqG868a6m3XQi0208WGgaGoIIIcc4aN418A98LYII2aWa01P9PEr50W0W4AP9f220oMn9W2
        G0Iuu40I2I8DW2gGI1beaafGkGD048B9BGI0GKQ04q90189BD3UKZ_vHe6W2W480CNG3WWWi
        3FY0b1jjQRB00aGq6U416GosijT80O0mcjiDe2R1QpssMW4e0GRxRpg4Y0akjDxij5RXa481
        tsefHIYa0QpYG29IJIDR3Pd8989O9BR3102H6e9DZ8449qo6i50I4aAIHqEAH0IiDBRu498e
        qi5XSaa2qosMo4III3SR3RW99e2C9Xns1P1J8c5HxY4485G5aDAW0aa06o60IHJ0001iJIUI
        90W04999HA00WWaa69100GWIIqa8103WJrqa8g0005NIIA00G099X92IG80Laq8X@Vr6GI2a
        a@VPt99QQY@zzkc81DXt@StZa4a4Z_m@W04a87URxZGQY4fzF_D9PG2QM8@3r889008GhLRR
        30081GjDjP002omsscg00AXKRRZM1920KRRaMC0020fPQxa2e0majjjI4M0KyccM6tQfQAMe
        F9AcdbZfsc83@5UfGX41Oe6d3wgHZ_ZMOr3424uWl1C8QY3oEjXoaQ0140m3n5K3G1pGQGQ0
        4W00088r8sCmXl1A87W504W4yqt7380X400eq0Y8te6IFcWYEW01000920Wn3Q8497MOwWQd
        MOSa72DOYgwSOe482FYWyIiO5x6wLEXw388uHDIIYWkbWuIY4o9GYT3Ge6040400S0T12008
        gSHYf2SW140GQ58040C8DW2YL1an4IO2W2W001G004uQmFM182G000bgRGe1EaJm11GL000G
        042G0X1aGBvCSOm2P2cGZ09yJm1JMM000W1082Gn9CH0x9qpp2x0imNOPaO32ZnlH66MqRL1
        ZYXGI2Iaa13lEuGmZSaYS330eH_5JKNg5lpJGihUa@02PCGG884SF020400AYkXKLxex75Q0
        W04040XMN09H99GOGIvui0iaa49IIGr0KWi4i0989OI0IIeaaa8O919uH60909b6m10989HI
        MI2a49HGIIZca45P1P1MGJm24qWq080aabGE1LaKP2fgcmNBVyfm2H8TGS0Cayk2f21HiIC4
        GH2jvjIQ0Oq805ZQPG_afyCm2fhZG_1CWaaWCJJ80aabarO1GGIIggIX67FG8P81GIWa0Ef8
        D032Uy0II0I4aiag1OXmZOO0pA2Qm20bjj1Fg00ejDRR004GosijTa0a0GYjlD00A1QsssM8
        0S1mVRPp0Wa0ajjDxij9RYa489tsajGIYa4Qpss29IIIDRJRd8f898PHQ3J00HkjXDZWK09a
        s6e50AiaQR0mE010IiDBRv49F9qijjTaaaqosssUG03Ocaa8mtq0Rdaa8XY60jJI4WK058s0
        G2Io4Y1R49fD10040E999b002Waaq4f0000IIIa40000A9HIYa050kLQGYW0004999fG0G04
        Wac88140KIQh4_@J@399II_@r@ca889_tt@RYaa4U@xVFIIIICzn@302NYiyDjF999IS@Kyt
        jaW94OY_FI22a0000esW79W04scjD30000Rsss2000GPRRR5002WIwpR28e90ijjPd4a80ss
        7j5G2MWQRcq20HAsIooa4Yg9PEqmHW8Kwr7rF4n@85K2J280G2k2mXgOGOK080602iCm4v7d
        Gx1H4aQ1WG00wCGYAAe8e3AcWSZk0U8Nt3I38YO28eHA6A1HYLYR8o54I3GYIIE8wm2I10X0
        mJ8LeBQC1Yz48u213YIeWUhae4W6_9mXop999wGsQoXM8c8y8A6DGXQ0EOSH3Qy_WT5mOhv4
        0e00itb9bgyG9mZaJ03p2zGE1Aap04G500o88X0DCeXG4MCmX__m8NW3MYUbb2I8VI3_0m0A
        000vv9IT2OqYCCDNNoZ2841n2x3G1104WQ0Ku_G5G0404ye4F1amw15K3W2P1SGPD64UK51Q
        CnS2701089ye38909LSS312MWIIMIe0i5jvGWiaWayY8e602KI2a4gJ488893Js09899oGIK
        Wib48909JM2I25aaamZA8qwEgbmWIFrudEG6LOX4HqelX7EHW0800WHJ0IfUU4sF8DSVpby7
        4Uq1IGIIoMO1WeaaPDUW098BIIIIW4baO919HIo2YCaeKerE4q03aWaW2QuWq08WaeaKQ058
        9P9XGIIIQ07aJ09z0uGH154Uq2000Q3FY000PRssE4090Ppss64XX0TD05O0QRps62a0WiDR
        RdjQRRa899vgjjDAye5ORda899iLPPZ09897ffjH0aW4qsoq2IQIYQROfE919IijjQxaa89q
        s6U418rss64u0c999ISG3qs190Jea1Hxq5C8rMXXDQaKaSrYo65y8100WJaaa800009un22F
        Q1GW20E9DDX80A0aaaj6W2gVa000baCDX@z@@G6U41_@JIaa4@x@@D9y82y@F9HIIErH@392
        2IE@Lzdr0GWzzt4989S_r@FaK4a4UK1sM0000WjPRx08y86W4c2esscc00220JRQs1052Wfj
        nR10A4esEuncwYvYaa0vEcBkmMafTc8R0GAvrWu0C0801GK7YyKS1XWSmW34a609vfjm00vi
        1Y9V7SGkiAqQ4430CX010W0DK8ts7In7ab7b8hnDED8Zq0M977UgFvZDd9OQbL40005c0201
        10USWeG38vid9cX8b_BXeW0GoCZaa0W8406Y6eaplbekXCUnQcM9Wf6W2M0eWD8c8qWHg5mX
        W71Pya82FAXC0P8@O3aWaba1e1XwG019HfAaE0f9GIWWK4cC3r0qGQ044UK7DPynwAb4dG9d
        sHG4u5C8G178Sma6aa6G2XMJJi97qsR29YuIs2QK3G61DiHNa4819Hf6W4Waaa4UKE30KGuH
        N0800e6W2G0qsM302C4002FwZQ0808vocbDIIaaGBr0S0Pxa499nsX7bX5jbDdWaaWMsqiJJ
        2YKRRns8Dvj050IQI8y8D0001uaaii602qaaaM301cia0g1W0qam@X7bXV@t@Q0Am_V2ID06
        099Xp@t@Xa4aamZq0G000QRRR24050Cjj7HW0ifjjA0020rsc6Ua7XUKmyGaayY4j10pQ0wK
        CWCW010IRPYCC_etV2oDm0W0W0f1So00e5Qm1@9iGm9Ya6W4f2TJpCcaJW3X7zd020WQ08ek
        5GQFYYD3MuF0O2DuaS2COC974400KHJE9LWMerNKGmDfreGdiy4RE2XJeHpJQqMGAG0042Fg
        bGTO8yeBg101GIGIaaia2Ui01991XwyXWaaaq0K8X76o9GavLe9DW62ZQXu4oeCp4Y0uWHhQ
        9D092QWa7hW8y8eoMeXW60f6W3ImkXmZIP008msss20000m@@l7899IejjQ30000u@x@7IYa
        aq0ej10000y2u@3H0IIO1ORP3020m@380890000W899fDh9e7X3aaa0Yaa4O303410918089
        OX3G2GI2I0Ig602GIIIckW2GIIIQ9O109H0R0aW4WaaS2Q0ijjD1IIoo18Wsss6qssM1999h
        3GW6Ws6q0qs0909h1W0B0RBO1ORN7u08999v4GWjjj1jjjDaaaa0III2ORRp2RRhMI0Ia410
        I2i0ORX50RB4089G2Wa4Q0qsG6Ws6ECmWu1K0IIII91AW4WayUY50890iv248999oLmW_E8G
        IIIMA05qQ11r0S00I0WQ0KGijjTS2A0jjjLWaa4X00W108GD9jzX14081000000MasMH2GI4
        0I0UFW0SRRRsaaa8s@@xVRRpsnscjD99IIu@_@tDHRROHoso4999kFv@VcascgdijPIIIYuJ
        wt7QRhsQRRscjjQRjjPRxsgjjpcjjTgsssOssscsassg1W0aqsOssssPIQRARRRpj9jDZjjD
        R000XwWJSSGD00QDteGgGqSCrF98GJD0YSTxCf1CHG37c7HV1DOr8165D07C000wIhl44oAO
        f72QWmu4m8QWOo_1b0dE84nGIZs0IIGIacia2SIY0DiFe1l2hqbq0m81XQ0880i0A114L010
        080040W004kfeWQ0o0;
    INTEGER CHECKSUM =19537;
ENDDATA;


PROCEDURE DO_EXIT USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $81;
    WAIT IDLE, 250 USEC;
    IRSCAN 8, $81, CAPTURE BUFF128[7..0];
    IF ( ! (BUFF128[2]==0) ) THEN GOTO Label_0;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $07;
    WAIT IDLE, 1 CYCLES;
    WAIT IDLE, 200 USEC;
    Label_0:
    IRSCAN 8, $ff;
    WAIT IDLE, 200 USEC;
    WAIT RESET, 3 CYCLES;
    EXIT STATUS;
ENDPROC;

PROCEDURE DO_READ_SECURITY USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a4;
    WAIT IDLE, 3 CYCLES;
    DRSCAN 44, $00000000000, CAPTURE SECREG[];
    ULUWE = SECREG[ULUWE_BITLOCATION];
    ULARE = SECREG[ULARE_BITLOCATION];
    ULUPC = SECREG[ULUPC_BITLOCATION];
    ULUFE = SECREG[ULUFE_BITLOCATION];
    ULUFP = SECREG[ULUFP_BITLOCATION];
    ULUFJ = SECREG[ULUFJ_BITLOCATION];
    ULFLR = SECREG[ULFLR_BITLOCATION];
    ULULR = SECREG[ULULR_BITLOCATION];
    ULAWE = SECREG[ULAWE_BITLOCATION];
    ULARD = SECREG[ULARD_BITLOCATION];
    ULOPT[1] = SECREG[ULOPT1_BITLOCATION];
    ULOPT[0] = SECREG[ULOPT0_BITLOCATION];
ENDPROC;

PROCEDURE DO_OUTPUT_SECURITY USES GV;
    PRINT "Security Settings :";
    IF ( ! (ULUFP==1) ) THEN GOTO Label_1;
    PRINT "FlashROM Write/Erase protected by pass key.";
    Label_1:
    IF ( ! (ULUFJ==1) ) THEN GOTO Label_2;
    PRINT "FlashROM Read protected by pass key.";
    Label_2:
    IF ( ! (ULAWE==1) ) THEN GOTO Label_3;
    PRINT "Array Write/Erase protected by pass key.";
    Label_3:
    IF ( ! (ULARD==1) ) THEN GOTO Label_4;
    PRINT "Array Verify protected by pass key.";
    Label_4:
    IF ( ! (ULUFE==1) ) THEN GOTO Label_5;
    PRINT "Encrypted FlashROM Programming Enabled.";
    Label_5:
    IF ( ! (ULARE==1) ) THEN GOTO Label_6;
    PRINT "Encrypted FPGA Array Programming Enabled.";
    Label_6:
    PRINT "=========================================";
ENDPROC;

PROCEDURE DO_QUERY_SECURITY USES DO_READ_SECURITY,DO_OUTPUT_SECURITY;
    CALL DO_READ_SECURITY;
    CALL DO_OUTPUT_SECURITY;
ENDPROC;

PROCEDURE READ_UROW USES BITSTREAM,GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a8;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE UROW[];
    SUROWALGOVERSION[6..0] = $00;
    IF ( ! ( (UROW[5]==0)&&(UROW[0]==1)) ) THEN GOTO Label_7;
    SUROWALGOVERSION[5..4] = UROW[24..23];
    Label_7:
    IF ( ! ( (UROW[5]==1)&&(UROW[0]==0)) ) THEN GOTO Label_8;
    SUROWALGOVERSION[5..4] = UROW[24..23];
    SUROWALGOVERSION[6] = 1;
    Label_8:
    SUROWCHECKSUM[15..0] = UROW[127..112];
    SUROWCYCLECOUNT = INT(UROW[111..102]);
    SUROWDESIGNNAME[69..0] = UROW[101..32];
    SUROWPROGMETHOD[2..0] = UROW[31..29];
    SUROWALGOVERSION[3..0] = UROW[28..25];
    SUROW_PKG_TYPE[5..0] = UROW[22..17];
    SUROW_SW_VERSION[6..0] = UROW[16..10];
    SUROWPROGRAMSW[3..0] = UROW[9..6];
    SUROW_SRAM_DISTURB[0] = UROW[4];
    SUROW_SPEED_GRADE[2..0] = UROW[3..1];
    ACT_UROW_CYCLE_COUNT = SUROWCYCLECOUNT;
ENDPROC;

PROCEDURE FIX_INT_ARRAYS USES GV,ECCCHECK;
    IF ( ! (HEX[0]!=48) ) THEN GOTO Label_9;
    FOR I = 0 TO 7;
        TEMP = HEX[I];
        HEX[I] = HEX[(15-I)];
        HEX[(15-I)] = TEMP;
    NEXT I;
    FOR I = 0 TO 127;
        TEMP = SYNDROMETABLE[I];
        SYNDROMETABLE[I] = SYNDROMETABLE[(255-I)];
        SYNDROMETABLE[(255-I)] = TEMP;
    NEXT I;
    Label_9:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DISP_CHKSUM_DESIGN USES GV,FIX_INT_ARRAYS;
    CALL FIX_INT_ARRAYS;
    IF ( ! (INT(SUROWCHECKSUM[15..0])==65535) ) THEN GOTO Label_10;
    PRINT "CHECKSUM: ";
    Label_10:
    IF ( ! (INT(SUROWCHECKSUM[15..0])!=65535) ) THEN GOTO Label_11;
    PRINT "CHECKSUM: ",CHR$(HEX[INT(SUROWCHECKSUM[15..12])]),CHR$(HEX[INT(SUROWCHECKSUM[11..8])])
        ,CHR$(HEX[INT(SUROWCHECKSUM[7..4])]),CHR$(HEX[INT(SUROWCHECKSUM[3..0])]);
    Label_11:
    IF ( ! ( ( (INT(SUROWDESIGNNAME[0..30])==2147483647)&&(INT(SUROWDESIGNNAME[31..61])==2147483647))&&(INT(SUROWDESIGNNAME[62..69])==255)) ) THEN GOTO Label_12;
    PRINT "Design Name: ";
    Label_12:
    IF ( ! ( ( (INT(SUROWDESIGNNAME[0..30])!=2147483647)||(INT(SUROWDESIGNNAME[31..61])!=2147483647))||(INT(SUROWDESIGNNAME[62..69])!=255)) ) THEN GOTO Label_13;
    PRINT "Design Name: ",CHR$(INT(SUROWDESIGNNAME[63..69])),CHR$(INT(SUROWDESIGNNAME[56..62]))
        ,CHR$(INT(SUROWDESIGNNAME[49..55])),CHR$(INT(SUROWDESIGNNAME[42..48])),CHR$(INT(SUROWDESIGNNAME[35..41]))
        ,CHR$(INT(SUROWDESIGNNAME[28..34])),CHR$(INT(SUROWDESIGNNAME[21..27])),CHR$(INT(SUROWDESIGNNAME[14..20]))
        ,CHR$(INT(SUROWDESIGNNAME[7..13])),CHR$(INT(SUROWDESIGNNAME[0..6]));
    Label_13:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DISPLAY_UROW USES BITSTREAM,CONSTBLOCK,GV,DISP_CHKSUM_DESIGN;
    EXPORT "USER_ROW", UROW[127..0];
    PRINT "User information: ";
    CALL DISP_CHKSUM_DESIGN;
    IF ( ! (FLAGDISPLAYCYC==1) ) THEN GOTO Label_14;
    PRINT "CYCLE COUNT: ",SUROWCYCLECOUNT;
    Label_14:
    INTEGER TMPINT =INT(SUROWPROGMETHOD[]);
    INTEGER TMPINT2 =0;
    INTEGER TMPINT3 =0;
    INTEGER TMPINT4 =0;
    INTEGER TMPINT5 =0;
    IF ( ! (TMPINT==IEEE1532) ) THEN GOTO Label_15;
    PRINT "Programming Method: IEEE1532";
    Label_15:
    IF ( ! (TMPINT==STAPL) ) THEN GOTO Label_16;
    PRINT "Programming Method: STAPL";
    Label_16:
    IF ( ! (TMPINT==DIRECTC) ) THEN GOTO Label_17;
    PRINT "Programming Method: DirectC";
    Label_17:
    IF ( ! (TMPINT==PDB) ) THEN GOTO Label_18;
    PRINT "Programming Method: PDB";
    Label_18:
    IF ( ! (TMPINT==SVF) ) THEN GOTO Label_19;
    PRINT "Programming Method: SVF";
    Label_19:
    IF ( ! (TMPINT==IAP) ) THEN GOTO NOT_IAP;
    PRINT "Progarmming Method: IAP";
    NOT_IAP:
    PRINT "Algorithm Version: ",INT(SUROWALGOVERSION[6..0]);
    TMPINT = INT(SUROW_PKG_TYPE[]);
    IF ( ! (TMPINT==UNSPECIFIED) ) THEN GOTO Label_20;
    PRINT "Device Package Type: package information not available from device";
    Label_20:
    IF ( ! (TMPINT==QN132) ) THEN GOTO Label_21;
    PRINT "Device Package Type: QN132/QNG132";
    Label_21:
    IF ( ! (TMPINT==VQ100) ) THEN GOTO Label_22;
    PRINT "Device Package Type: VQ100/VQG100";
    Label_22:
    IF ( ! (TMPINT==TQ144) ) THEN GOTO Label_23;
    PRINT "Device Package Type: TQ144/TQG144";
    Label_23:
    IF ( ! (TMPINT==PQ208) ) THEN GOTO Label_24;
    PRINT "Device Package Type: PQ208/PQG208";
    Label_24:
    IF ( ! (TMPINT==FG144) ) THEN GOTO Label_25;
    PRINT "Device Package Type: FG144/FGG144";
    Label_25:
    IF ( ! (TMPINT==FG256) ) THEN GOTO Label_26;
    PRINT "Device Package Type: FG256/FGG256";
    Label_26:
    IF ( ! (TMPINT==FG484) ) THEN GOTO Label_27;
    PRINT "Device Package Type: FG484/FGG484";
    Label_27:
    IF ( ! (TMPINT==FG676) ) THEN GOTO Label_28;
    PRINT "Device Package Type: FG676/FGG676";
    Label_28:
    IF ( ! (TMPINT==FG896) ) THEN GOTO Label_29;
    PRINT "Device Package Type: FG896/FGG896";
    Label_29:
    IF ( ! (TMPINT==QN108) ) THEN GOTO Label_30;
    PRINT "Device Package Type: QN108/QNG108";
    Label_30:
    IF ( ! (TMPINT==QN180) ) THEN GOTO Label_31;
    PRINT "Device Package Type: QN180/QNG180";
    Label_31:
    IF ( ! (TMPINT==TQ100) ) THEN GOTO Label_32;
    PRINT "Device Package Type: TQ100/TQG100";
    Label_32:
    IF ( ! (TMPINT==CQ208) ) THEN GOTO Label_33;
    PRINT "Device Package Type: CQ208/CQG208";
    Label_33:
    IF ( ! (TMPINT==FG1152) ) THEN GOTO Label_34;
    PRINT "Device Package Type: FG1152/FGG1152";
    Label_34:
    IF ( ! (TMPINT==BG456) ) THEN GOTO Label_35;
    PRINT "Device Package Type: BG456/BGG456";
    Label_35:
    IF ( ! (TMPINT==UNDEFINED) ) THEN GOTO Label_36;
    PRINT "Device Package Type: package information not available from device";
    Label_36:
    TMPINT = INT(SUROW_SPEED_GRADE[]);
    IF ( ! (TMPINT==GRADE_UNSPEC) ) THEN GOTO Label_37;
    PRINT "Device Speed Grade: speed grade information not available from device";
    Label_37:
    IF ( ! (TMPINT==GRADE_1) ) THEN GOTO Label_38;
    PRINT "Device Speed Grade: -1";
    Label_38:
    IF ( ! (TMPINT==GRADE_2) ) THEN GOTO Label_39;
    PRINT "Device Speed Grade: -2";
    Label_39:
    IF ( ! (TMPINT==GRADE_3) ) THEN GOTO Label_40;
    PRINT "Device Speed Grade: -3";
    Label_40:
    IF ( ! (TMPINT==GRADE_F) ) THEN GOTO Label_41;
    PRINT "Device Speed Grade: -F";
    Label_41:
    IF ( ! (TMPINT==GRADE_STD) ) THEN GOTO Label_42;
    PRINT "Device Speed Grade: STD";
    Label_42:
    IF ( ! (TMPINT==GRADE_4) ) THEN GOTO Label_43;
    PRINT "Device Speed Grade: -4";
    Label_43:
    IF ( ! (TMPINT==GRADE_UNDEF) ) THEN GOTO Label_44;
    PRINT "Device Speed Grade: speed grade information not available from device";
    Label_44:
    TMPINT = INT(SUROWPROGRAMSW[]);
    IF ( ! (TMPINT==FP) ) THEN GOTO Label_45;
    PRINT "Programmer: FlashPro";
    Label_45:
    IF ( ! (TMPINT==FPLITE) ) THEN GOTO Label_46;
    PRINT "Programmer: FlashPro Lite";
    Label_46:
    IF ( ! (TMPINT==FP3) ) THEN GOTO Label_47;
    PRINT "Programmer: FlashPro3";
    Label_47:
    IF ( ! (TMPINT==FP4) ) THEN GOTO Label_48;
    PRINT "Programmer: FlashPro4";
    Label_48:
    IF ( ! (TMPINT==SCULPTW) ) THEN GOTO Label_49;
    PRINT "Programmer: SiliconSculptor II";
    Label_49:
    IF ( ! (TMPINT==BPW) ) THEN GOTO Label_50;
    PRINT "Programmer: BP Programmer";
    Label_50:
    IF ( ! (TMPINT==DIRECTCP) ) THEN GOTO Label_51;
    PRINT "Programmer: DirectC";
    Label_51:
    IF ( ! (TMPINT==STP) ) THEN GOTO Label_52;
    PRINT "Programmer: Actel JAM Player";
    Label_52:
    IF ( ! ( ( ( (TMPINT==FP)||(TMPINT==FPLITE))||(TMPINT==FP3))||(TMPINT==FP4)) ) THEN GOTO Label_68;
    TMPINT2 = INT(SUROW_SW_VERSION[]);
    IF ( ! (TMPINT2==FP33) ) THEN GOTO Label_53;
    PRINT "Software: FlashPro v3.3";
    Label_53:
    IF ( ! (TMPINT2==FP34) ) THEN GOTO Label_54;
    PRINT "Software: FlashPro v3.4";
    Label_54:
    IF ( ! (TMPINT2==FP40) ) THEN GOTO Label_55;
    PRINT "Software: FlashPro v4.0";
    Label_55:
    IF ( ! (TMPINT2==FP41) ) THEN GOTO Label_56;
    PRINT "Software: FlashPro v4.1";
    Label_56:
    IF ( ! (TMPINT2==FP42) ) THEN GOTO Label_57;
    PRINT "Software: FlashPro v4.2";
    Label_57:
    IF ( ! (TMPINT2==FP50) ) THEN GOTO Label_58;
    PRINT "Software: FlashPro v5.0";
    Label_58:
    IF ( ! (TMPINT2==FP51) ) THEN GOTO Label_59;
    PRINT "Software: FlashPro v5.1";
    Label_59:
    IF ( ! (TMPINT2==FP60) ) THEN GOTO Label_60;
    PRINT "Software: FlashPro v6.0";
    Label_60:
    IF ( ! (TMPINT2==FP61) ) THEN GOTO Label_61;
    PRINT "Software: FlashPro v6.1";
    Label_61:
    IF ( ! (TMPINT2==FP62) ) THEN GOTO Label_62;
    PRINT "Software: FlashPro v6.2";
    Label_62:
    IF ( ! (TMPINT2==FP84) ) THEN GOTO Label_63;
    PRINT "Software: FlashPro v8.4";
    Label_63:
    IF ( ! (TMPINT2==FP85) ) THEN GOTO Label_64;
    PRINT "Software: FlashPro v8.5";
    Label_64:
    IF ( ! (TMPINT2==FP86) ) THEN GOTO Label_65;
    PRINT "Software: FlashPro v8.6";
    Label_65:
    IF ( ! (TMPINT2==FP90) ) THEN GOTO Label_66;
    PRINT "Software: FlashPro v9.0";
    Label_66:
    IF ( ! (TMPINT2==FP91) ) THEN GOTO NOT_FP91;
    PRINT "Software: FlashPro v9.1";
    NOT_FP91:
    IF ( ! (TMPINT2==UNKNOWN) ) THEN GOTO Label_67;
    PRINT "Software: FlashPro vX.X";
    Label_67:
    LABEL_SEPARATOR = 0;
    Label_68:
    IF ( ! ( (TMPINT==SCULPTW)||(TMPINT==BPW)) ) THEN GOTO Label_72;
    TMPINT3 = (INT(SUROW_SW_VERSION[6..5])+SCULPTORMAJORBASE);
    TMPINT4 = (INT(SUROW_SW_VERSION[4..1])+SCULPTORMINORBASE);
    TMPINT5 = 0;
    IF ( ! (SUROW_SW_VERSION[0]==1) ) THEN GOTO Label_69;
    TMPINT5 = 1;
    Label_69:
    IF ( ! (TMPINT==SCULPTW) ) THEN GOTO Label_70;
    PRINT "Software: Sculptor Win v",TMPINT3,".",TMPINT4,".",TMPINT5;
    Label_70:
    IF ( ! (TMPINT==BPW) ) THEN GOTO Label_71;
    PRINT "Software: BP Win v",TMPINT3,".",TMPINT4,".",TMPINT5;
    Label_71:
    LABEL_SEPARATOR = 0;
    Label_72:
    PRINT "=========================================";
ENDPROC;

PROCEDURE CAL_PARITY USES GV,ECCCHECK;
    INTEGER COUNT =0;
    INTEGER II;
    FOR II = 0 TO 119;
        IF ( ! ( TEMPDATA[II]&&TEMPECCSTR[II]) ) THEN GOTO Label_73;
        COUNT = (COUNT+1);
        Label_73:
        LABEL_SEPARATOR = 0;
    NEXT II;
    IF ( ! ((COUNT%2)==1) ) THEN GOTO Label_74;
    TEMPPARITY = 1;
    Label_74:
    IF ( ! ((COUNT%2)==0) ) THEN GOTO Label_75;
    TEMPPARITY = 0;
    Label_75:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE CAL_ECC USES ECCCHECK,CAL_PARITY;
    TEMPECCSTR[] = ECCSTR0[];
    CALL CAL_PARITY;
    TEMPECC[0] = TEMPPARITY;
    TEMPECCSTR[] = ECCSTR1[];
    CALL CAL_PARITY;
    TEMPECC[1] = TEMPPARITY;
    TEMPECCSTR[] = ECCSTR2[];
    CALL CAL_PARITY;
    TEMPECC[2] = ( !TEMPPARITY);
    TEMPECCSTR[] = ECCSTR3[];
    CALL CAL_PARITY;
    TEMPECC[3] = ( !TEMPPARITY);
    TEMPECCSTR[] = ECCSTR4[];
    CALL CAL_PARITY;
    TEMPECC[4] = TEMPPARITY;
    TEMPECCSTR[] = ECCSTR5[];
    CALL CAL_PARITY;
    TEMPECC[5] = TEMPPARITY;
    TEMPECCSTR[] = ECCSTR6[];
    CALL CAL_PARITY;
    TEMPECC[6] = TEMPPARITY;
    TEMPECCSTR[] = ECCSTR7[];
    CALL CAL_PARITY;
    TEMPECC[7] = TEMPPARITY;
ENDPROC;

PROCEDURE ECC1_CHECKING USES GV,ECCCHECK,CAL_ECC;
    BOOLEAN READECC[8];
    BOOLEAN CALECC[8];
    BOOLEAN SYNDROME[8];
    INTEGER IERRORBIT;
    BOOLEAN BECC1VALUE;
    READECC[7..0] = BUFF128[7..0];
    TEMPDATA[119..0] = BUFF128[127..8];
    CALL CAL_ECC;
    CALECC[] = TEMPECC[];
    FOR I = 0 TO 7;
        IF ( ! (CALECC[I]!=READECC[I]) ) THEN GOTO Label_76;
        SYNDROME[I] = 1;
        Label_76:
        LABEL_SEPARATOR = 0;
    NEXT I;
    IERRORBIT = SYNDROMETABLE[INT(SYNDROME[])];
    IF ( ! ( (IERRORBIT!=-1)&&(IERRORBIT!=-99)) ) THEN GOTO Label_79;
    BECC1VALUE = BUFF128[(8+IERRORBIT)];
    IF ( ! (BECC1VALUE==1) ) THEN GOTO Label_77;
    BUFF128[(8+IERRORBIT)] = 0;
    Label_77:
    IF ( ! (BECC1VALUE==0) ) THEN GOTO Label_78;
    BUFF128[(8+IERRORBIT)] = 1;
    Label_78:
    LABEL_SEPARATOR = 0;
    Label_79:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE READ_F_ROW USES GV,ECC1_CHECKING;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $f9;
    DRSCAN 3, FADDR[];
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $bf;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE BUFF128[];
    CALL ECC1_CHECKING;
ENDPROC;

PROCEDURE DO_DEVICE_INFO USES GV,READ_UROW,DISPLAY_UROW,READ_F_ROW;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0e;
    WAIT IDLE, 1 CYCLES;
    DRSCAN 32, $00000000, CAPTURE BUFF32[];
    EXPORT "SILSIG", BUFF32[];
    IRSCAN 8, $84, CAPTURE BUFF128[7..0];
    IF ( ! (BUFF128[2]==1) ) THEN GOTO CORE_NOT_ENABLED;
    PRINT "FPGA Array is programmed and enabled.";
    CORE_NOT_ENABLED:
    IF ( ! (BUFF128[2]==0) ) THEN GOTO CORE_ENABLED;
    PRINT "FPGA Array is not enabled.";
    CORE_ENABLED:
    CALL READ_UROW;
    CALL DISPLAY_UROW;
    FADDR[] = $0;
    CALL READ_F_ROW;
    EXPORT "FSN", BUFF128[55..8];
    PRINT "=========================================";
ENDPROC;

PROCEDURE INIT_AES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $dd;
    DRSCAN 128, $00000000000000000000000000000000;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
ENDPROC;

PROCEDURE DO_VERIFY_DEVICE_INFO USES GV,BITSTREAM,DO_EXIT,DO_READ_SECURITY,READ_UROW
    ,DISP_CHKSUM_DESIGN;
    CALL READ_UROW;
    CALL DISP_CHKSUM_DESIGN;
    CALL DO_READ_SECURITY;
    BUFF32[31..0] = BOOL(CHECKSUM);
    UROW[127..112] = BUFF32[15..0];
    UROW[101..32] = ACT_UROW_DESIGN_NAME[69..0];
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a8;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
    DRSCAN 128, $00000000000000000000000000000000,COMPARE UROW[],$ffff003fffffffffffffffff00000000
        ,PASS;
    IF ( ! (PASS==0) ) THEN GOTO UROW_CMP_OK;
    STATUS = -43;
    PRINT "Failed to verify design information.";
    UNIQUEEXITCODE = 32772;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    UROW_CMP_OK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE READ_IDCODE_ONLY USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0f;
    WAIT IDLE, 1 CYCLES;
    DRSCAN 32, $00000000, CAPTURE ID[];
    EXPORT "IDCODE", ID[];
ENDPROC;

PROCEDURE VERIFY_RLOCK USES GV;
    IRSCAN 8, $84,COMPARE $04,$04,PASS;
ENDPROC;

PROCEDURE DO_VERIFY_PGM_RLOCK USES GV,DO_EXIT,VERIFY_RLOCK;
    CALL VERIFY_RLOCK;
    IF ( ! (PASS==0) ) THEN GOTO RLOCK_PGM_PASS;
    STATUS = 10;
    PRINT "Failed to enable FPGA Array.";
    UNIQUEEXITCODE = 32891;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    RLOCK_PGM_PASS:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_VERIFY_RLOCK USES GV,DO_EXIT,VERIFY_RLOCK;
    CALL VERIFY_RLOCK;
    IF ( ! (PASS==0) ) THEN GOTO RLOCK_VERIFY_PASS;
    STATUS = 11;
    PRINT "FPGA Array is not enabled.";
    UNIQUEEXITCODE = 32892;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    RLOCK_VERIFY_PASS:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE VERIFY_IDCODE USES GV,PARAMETERS,DO_EXIT;
    FREQUENCY (FREQ*1000000);
    WAIT RESET, 5 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0f;
    DRSCAN 32, $00000000;
    WAIT IDLE, 1 CYCLES;
    DRSCAN 32, $00000000, CAPTURE ID[],COMPARE IDCODEVALUE[],IDMASK[],PASS;
    IF ( ! (PASS==0) ) THEN GOTO IDOK;
    STATUS = 6;
    PRINT "Failed to verify IDCODE";
    UNIQUEEXITCODE = 32797;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    IDOK:
    IDREV = INT(ID[31..28]);
    IDFAB = INT(ID[24..24]);
ENDPROC;

PROCEDURE IS_SECOK USES GV,DO_EXIT;
    IF ( ! (SECKEY_OK==0) ) THEN GOTO SECOK;
    STATUS = -35;
    PRINT "Failed to match pass key.";
    UNIQUEEXITCODE = 32799;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    SECOK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_CHECK_R USES GV,DO_EXIT,DO_READ_SECURITY;
    CALL DO_READ_SECURITY;
    IF ( ! (ULARE==1) ) THEN GOTO ARRAYEPR;
    STATUS = -33;
    PRINT "FPGA Array Encryption is enforced. Plain text verification is prohibited.";
    UNIQUEEXITCODE = 32800;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    ARRAYEPR:
    IF ( ! (ULARD==1) ) THEN GOTO SKIPRCHK1;
    STATUS = -30;
    PRINT "FPGA Array Verification is protected by pass key.";
    PRINT "A valid pass key needs to be provided.";
    UNIQUEEXITCODE = 32804;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    SKIPRCHK1:
    IF ( ! (ULARD==0) ) THEN GOTO Label_80;
    CHKSEC = 0;
    Label_80:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_CHECK_W USES GV,DO_EXIT,DO_READ_SECURITY;
    CALL DO_READ_SECURITY;
    IF ( ! (ULAWE==1) ) THEN GOTO ARRAYWP;
    STATUS = -28;
    PRINT "FPGA Array Write/Erase is protected by pass key.";
    PRINT "A valid pass key needs to be provided.";
    UNIQUEEXITCODE = 32805;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    ARRAYWP:
    IF ( ! (ULARD==1) ) THEN GOTO ARRAYRPW;
    STATUS = -30;
    PRINT "FPGA Array Verification is protected by pass key.";
    PRINT "A valid pass key needs to be provided.";
    UNIQUEEXITCODE = 32806;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    ARRAYRPW:
    IF ( ! (ULARE==1) ) THEN GOTO ARRAYEPW;
    STATUS = -33;
    PRINT "FPGA Array Encryption is enforced. Plain text programming is prohibited.";
    CALL DO_EXIT;
    ARRAYEPW:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE BP_VER USES GV;
    BOOLEAN PLAYER_VERSION_BOOLEAN[32];
    PLAYER_VERSION_BOOLEAN[31..0] = BOOL(PLAYERVERSIONVARIABLE);
    INTEGER PLAYER_MAJOR_VERSION =(INT(PLAYER_VERSION_BOOLEAN[23..16])-SCULPTORMAJORBASE);
    INTEGER PLAYER_MINOR_VERSION =(INT(PLAYER_VERSION_BOOLEAN[15..8])-SCULPTORMINORBASE);
    ACT_UROW_SW_VERSION[6..5] = BOOL(PLAYER_MAJOR_VERSION);
    ACT_UROW_SW_VERSION[4..1] = BOOL(PLAYER_MINOR_VERSION);
    ACT_UROW_SW_VERSION[0] = PLAYER_VERSION_BOOLEAN[0];
ENDPROC;

PROCEDURE SET_PRG_ARRAY USES GV;
    ISPRGARRAY = 1;
ENDPROC;

PROCEDURE DO_INITIALIZE USES GV,DO_EXIT,READ_F_ROW,DO_CHECK_R,DO_CHECK_W,BP_VER;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $7f;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 50 USEC;
    BSR[287..0] = BSRPATTERN[287..0];
    BOOLEAN SHIFT_DATA[288];
    IRSCAN 8, $01;
    DRSCAN 288, BSR[];
    WAIT IDLE, 1 CYCLES;
    DRSCAN 288, SHIFT_DATA[], CAPTURE SAMPLE_DEVICE[];
    FOR I = 0 TO 287;
        IF ( ! (SAMPLEMASK[I]==1) ) THEN GOTO Label_81;
        BSR[I] = SAMPLE_DEVICE[I];
        Label_81:
        LABEL_SEPARATOR = 0;
    NEXT I;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $01;
    DRSCAN 288, BSR[];
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $80;
    DRSCAN 18, $00000;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 1875 USEC;
    DRSCAN 18, $00000, CAPTURE ISC_CONFIG_RESULT[],COMPARE $30000,$30000,PASS;
    IF ( ! (PASS==0) ) THEN GOTO CRCOK;
    STATUS = 5;
    PRINT "Failed to enter programming mode.";
    EXPORT "ISC_Config_Result", ISC_CONFIG_RESULT[];
    UNIQUEEXITCODE = 32850;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    CRCOK:
    FADDR[] = $0;
    CALL READ_F_ROW;
    EXPORT "FSN", BUFF128[55..8];
    FADDR[] = $4;
    CALL READ_F_ROW;
    IF ( ! (BUFF128[55]!=0) ) THEN GOTO Label_82;
    PASS = 0;
    Label_82:
    IF ( ! (PASS==0) ) THEN GOTO CHECKOK;
    STATUS = 6;
    PRINT "Failed to verify IDCODE";
    UNIQUEEXITCODE = 32851;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    CHECKOK:
    IF ( ! (CHKARRAY==1) ) THEN GOTO SKIPCHKARRAY;
    IF ( ! (ARRAYRONLY==0) ) THEN GOTO Label_83;
    CALL DO_CHECK_W;
    Label_83:
    IF ( ! (ARRAYRONLY==1) ) THEN GOTO Label_84;
    CALL DO_CHECK_R;
    Label_84:
    LABEL_SEPARATOR = 0;
    SKIPCHKARRAY:
    IF ( ! (PLAYERVERSIONVARIABLE!=0) ) THEN GOTO Label_85;
    CALL BP_VER;
    Label_85:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE READ_INITIALIZE USES GV,DO_INITIALIZE;
    CHKFROM = 0;
    CHKARRAY = 0;
    CHKNVM = 0;
    CHKSEC = 0;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE NW_INITIALIZE_COMMON USES GV;
    CHKFROM = 0;
    CHKARRAY = 0;
ENDPROC;

PROCEDURE NW_INITIALIZE USES DO_INITIALIZE,NW_INITIALIZE_COMMON;
    CALL NW_INITIALIZE_COMMON;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE NR_INITIALIZE_COMMON USES GV;
    CHKFROM = 0;
    CHKARRAY = 0;
ENDPROC;

PROCEDURE NR_INITIALIZE USES DO_INITIALIZE,NR_INITIALIZE_COMMON;
    CALL NR_INITIALIZE_COMMON;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE AW_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 0;
    CHKFROM = 0;
    CHKARRAY = 1;
    CHKNVM = 0;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE AR_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 1;
    CHKFROM = 0;
    CHKARRAY = 1;
    CHKNVM = 0;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE W_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 0;
    CHKARRAY = 1;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE R_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 1;
    CHKARRAY = 1;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 0;
    FROMRONLY = 0;
    CHKFROM = 1;
    CHKARRAY = 1;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE POLL_ERASE USES GV;
    PASS = 0;
    INTEGER ILOOP_0;
    FOR ILOOP_0 = 262141 - 1 TO 0 STEP -1;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $84;
        WAIT IDLE, 1 CYCLES;
        WAIT IDLE, 1000 USEC;
        DRSCAN 5, $00,COMPARE $00,$03,PASS;
        IF PASS THEN ILOOP_0 = 0;
    NEXT ILOOP_0;
ENDPROC;

PROCEDURE POLL_PROGRAM USES GV;
    INTEGER ILOOP_1;
    FOR ILOOP_1 = 16381 - 1 TO 0 STEP -1;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $84;
        WAIT IDLE, 1 CYCLES;
        WAIT IDLE, 100 USEC;
        DRSCAN 5, $00,COMPARE $00,$0b,PASS;
        IF PASS THEN ILOOP_1 = 0;
    NEXT ILOOP_1;
ENDPROC;

PROCEDURE PROGRAM_UROW USES GV,BITSTREAM,DO_EXIT,POLL_PROGRAM;
    FOR FROMROWNUMBER = NUMBEROFFROMROWS TO 1 STEP -1;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $9f;
        DRSCAN 3, BOOL((FROMROWNUMBER-1));
        WAIT IDLE, 1 CYCLES;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $9b;
        DRSCAN 128, $ffffffffffffffffffffffffffffffff;
        WAIT IDLE, 5 CYCLES;
        WAIT IDLE, 10000 USEC;
    NEXT FROMROWNUMBER;
    IF ( ! (ISERASEONLY==0) ) THEN GOTO SKIP_CYC_INCREMENT;
    IF ( ! ( (ISPRGARRAY==1)&&(ACT_UROW_CYCLE_COUNT!=1023)) ) THEN GOTO Label_86;
    ACT_UROW_CYCLE_COUNT = (ACT_UROW_CYCLE_COUNT+1);
    Label_86:
    LABEL_SEPARATOR = 0;
    SKIP_CYC_INCREMENT:
    IF ( ! (ISERASEONLY==1) ) THEN GOTO Label_87;
    UROW[] = $ffffffffffffffffffffffffffffffff;
    Label_87:
    IF ( ! ( (ISERASEONLY==0)||(ISRESTOREDESIGN==1)) ) THEN GOTO SKIP_DESIGN_INFO;
    BUFF32[31..0] = BOOL(CHECKSUM);
    IF ( ! ( !ISRESTOREDESIGN) ) THEN GOTO Label_88;
    UROW[127..112] = BUFF32[15..0];
    Label_88:
    IF ( ! ISRESTOREDESIGN ) THEN GOTO Label_89;
    UROW[127..112] = SUROWCHECKSUM[15..0];
    Label_89:
    IF ( ! ( !ISRESTOREDESIGN) ) THEN GOTO Label_90;
    UROW[101..32] = ACT_UROW_DESIGN_NAME[69..0];
    Label_90:
    IF ( ! ISRESTOREDESIGN ) THEN GOTO Label_91;
    UROW[101..32] = SUROWDESIGNNAME[69..0];
    Label_91:
    LABEL_SEPARATOR = 0;
    SKIP_DESIGN_INFO:
    BUFF32[31..0] = BOOL(ACT_UROW_CYCLE_COUNT);
    UROW[111..102] = BUFF32[9..0];
    UROW[31..29] = ACT_UROW_PROG_METHOD[2..0];
    UROW[28..25] = ACT_UROW_ALGO_VERSION[3..0];
    UROW[16..10] = ACT_UROW_SW_VERSION[6..0];
    UROW[9..6] = ACT_UROW_PROGRAM_SW[3..0];
    UROW[4] = SUROW_SRAM_DISTURB[0];
    IF ( ! (ACT_UROW_ALGO_VERSION[6]==1) ) THEN GOTO Label_92;
    UROW[5] = 1;
    UROW[0] = 0;
    UROW[24..23] = ACT_UROW_ALGO_VERSION[5..4];
    Label_92:
    IF ( ! (ACT_UROW_ALGO_VERSION[6]==0) ) THEN GOTO Label_93;
    UROW[5] = 0;
    UROW[0] = 1;
    UROW[24..23] = ACT_UROW_ALGO_VERSION[5..4];
    Label_93:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a7;
    DRSCAN 128, UROW[];
    WAIT IDLE, 15 CYCLES;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO PROGRAM_OK3;
    STATUS = -24;
    PRINT "Failed to program UROW";
    UNIQUEEXITCODE = 32853;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    PROGRAM_OK3:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a8;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
    DRSCAN 128, $00000000000000000000000000000000,COMPARE UROW[],UROW_MASK[],PASS;
    IF ( ! (PASS==0) ) THEN GOTO UROW_OK;
    STATUS = -24;
    PRINT "Failed to program UROW";
    UNIQUEEXITCODE = 32854;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    UROW_OK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE FAIL_ERASE USES GV,DO_EXIT;
    STATUS = 8;
    PRINT "Failed Erase Operation";
    UNIQUEEXITCODE = 32855;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
ENDPROC;

PROCEDURE EXE_ERASE USES BITSTREAM,GV,READ_UROW,POLL_ERASE,PROGRAM_UROW,FAIL_ERASE;
    IF ( ! (COMBERASESELECT[14]==1) ) THEN GOTO SKIPRUROW;
    CALL READ_UROW;
    EXPORT "ACTEL_SLOG_UROW", UROW[];
    SKIPRUROW:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $85;
    DRSCAN 23, COMBERASESELECT[];
    WAIT IDLE, 3 CYCLES;
    CALL POLL_ERASE;
    IF ( ! (PASS==0) ) THEN GOTO ERASEOK;
    CALL FAIL_ERASE;
    ERASEOK:
    IF ( ! (COMBERASESELECT[14]==1) ) THEN GOTO Label_94;
    CALL PROGRAM_UROW;
    Label_94:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_ERASE USES GV,EXE_ERASE;
    PRINT "Erase ...";
    COMBERASESELECT[22..0] = $004000;
    COMBERASESELECT[0] = 1;
    CALL EXE_ERASE;
    PRINT "Completed erase";
ENDPROC;

PROCEDURE DO_ERASE_ARRAY USES GV,EXE_ERASE;
    PRINT "Erase FPGA Array ...";
    COMBERASESELECT[22..0] = $004001;
    CALL EXE_ERASE;
ENDPROC;

PROCEDURE DO_ERASE_ONLY USES GV,DO_ERASE;
    ISERASEONLY = 1;
    CALL DO_ERASE;
ENDPROC;

PROCEDURE DO_ERASE_ARRAY_ONLY USES GV,DO_ERASE_ARRAY;
    ISERASEONLY = 1;
    CALL DO_ERASE_ARRAY;
ENDPROC;

PROCEDURE DO_ERASE_ALL USES GV,EXE_ERASE;
    IF ( ! ( (BM7DEVICE==1)||(BM1DEVICE==1)) ) THEN GOTO Label_95;
    PRINT "Erase FPGA Array and FlashROM ...";
    Label_95:
    IF ( ! ( (BM7DEVICE!=1)&&(BM1DEVICE!=1)) ) THEN GOTO Label_96;
    PRINT "Erase FPGA Array, FlashROM and Security Settings ...";
    Label_96:
    COMBERASESELECT[22..0] = $7fc00f;
    ISERASEONLY = 1;
    CALL EXE_ERASE;
ENDPROC;

PROCEDURE LOAD_ROW_DATA USES BITSTREAM,GV;
    FOR SDTILE = 1 TO NUMBEROFSDTILES;
        FOR I = 1 TO 8;
            IRSTOP IRPAUSE;
            DRSTOP DRPAUSE;
            IRSCAN 8, $89;
            DRSCAN 26, DATASTREAM[(DATAINDEX+25)..DATAINDEX];
            WAIT IDLE, 3 CYCLES;
            DATAINDEX = (DATAINDEX+26);
        NEXT I;
    NEXT SDTILE;
ENDPROC;

PROCEDURE EXE_PROGRAM USES GV,DO_EXIT,POLL_PROGRAM;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $83;
    WAIT IDLE, 3 CYCLES;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_97;
    STATUS = 10;
    PRINT "Failed to program FPGA array at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32856;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_97:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE EXE_VERIFY USES GV,DO_EXIT,POLL_PROGRAM;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8d;
    DRSCAN 2, VERIFYEOL[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 132 USEC;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_98;
    STATUS = 11;
    PRINT "Verify 0 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32857;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_98:
    IRSCAN 8, $8d;
    DRSCAN 2, VERIFYEOL[],COMPARE $0,$3,PASS;
    IF ( ! (PASS==0) ) THEN GOTO Label_99;
    STATUS = 11;
    PRINT "Verify 0 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32858;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_99:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8e;
    DRSCAN 2, VERIFYEOL[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 132 USEC;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_100;
    STATUS = 11;
    PRINT "Verify 1 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32859;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_100:
    IRSCAN 8, $8e;
    DRSCAN 2, VERIFYEOL[],COMPARE $0,$3,PASS;
    IF ( ! (PASS==0) ) THEN GOTO Label_101;
    STATUS = 11;
    PRINT "Verify 1 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32860;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_101:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_PROGRAM USES GV,LOAD_ROW_DATA,EXE_PROGRAM;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $87;
    DRSCAN 2, $2;
    WAIT IDLE, 3 CYCLES;
    PRINT "Programming FPGA Array";
    DATAINDEX = 0;
    ROWNUMBER = (NUMBEROFMAPROWS-1);
    INTEGER IREPEAT_0;
    FOR IREPEAT_0 = NUMBEROFMAPROWS - 1 TO 0 STEP -1;
        CALL LOAD_ROW_DATA;
        CALL EXE_PROGRAM;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $87;
        DRSCAN 2, $3;
        WAIT IDLE, 3 CYCLES;
        IF ( ! ((ROWNUMBER%ROWITERATION)==0) ) THEN GOTO Label_102;
        PERCENT_UPDATE = ((100*((NUMBEROFMAPROWS-ROWNUMBER)+1))/NUMBEROFMAPROWS);
        DIFFERENCE = (PERCENT_UPDATE%10);
        IF ( ! (DIFFERENCE>=5) ) THEN GOTO ROUND_DOWN_PGM_A;
        PERCENT_UPDATE = (PERCENT_UPDATE+(10-DIFFERENCE));
        ROUND_DOWN_PGM_A:
        IF ( ! (DIFFERENCE<5) ) THEN GOTO ROUND_UP_PGM_A;
        PERCENT_UPDATE = (PERCENT_UPDATE-DIFFERENCE);
        ROUND_UP_PGM_A:
        EXPORT "PERCENT_DONE", PERCENT_UPDATE;
        Label_102:
        ROWNUMBER = (ROWNUMBER-1);
    NEXT IREPEAT_0;
ENDPROC;

PROCEDURE DO_VERIFY USES GV,LOAD_ROW_DATA,EXE_VERIFY;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $87;
    DRSCAN 2, $2;
    WAIT IDLE, 3 CYCLES;
    PRINT "Verifying FPGA Array";
    DATAINDEX = 0;
    ROWNUMBER = (NUMBEROFMAPROWS-1);
    INTEGER IREPEAT_1;
    FOR IREPEAT_1 = NUMBEROFMAPROWS - 1 TO 0 STEP -1;
        CALL LOAD_ROW_DATA;
        CALL EXE_VERIFY;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $87;
        DRSCAN 2, $3;
        WAIT IDLE, 3 CYCLES;
        IF ( ! ((ROWNUMBER%ROWITERATION)==0) ) THEN GOTO Label_103;
        PERCENT_UPDATE = ((100*((NUMBEROFMAPROWS-ROWNUMBER)+1))/NUMBEROFMAPROWS);
        DIFFERENCE = (PERCENT_UPDATE%10);
        IF ( ! (DIFFERENCE>=5) ) THEN GOTO ROUND_DOWN_VER_ARRAY;
        PERCENT_UPDATE = (PERCENT_UPDATE+(10-DIFFERENCE));
        ROUND_DOWN_VER_ARRAY:
        IF ( ! (DIFFERENCE<5) ) THEN GOTO ROUND_UP_VER_ARRAY;
        PERCENT_UPDATE = (PERCENT_UPDATE-DIFFERENCE);
        ROUND_UP_VER_ARRAY:
        EXPORT "PERCENT_DONE", PERCENT_UPDATE;
        Label_103:
        ROWNUMBER = (ROWNUMBER-1);
    NEXT IREPEAT_1;
    PRINT "        Verifying FPGA Array -- pass";
ENDPROC;

PROCEDURE DO_VERIFY_BOL USES GV,DO_VERIFY;
    VERIFYEOL[0] = 0;
    IF ( ! (IDREV==3) ) THEN GOTO Label_104;
    VERIFYEOL[0] = 1;
    Label_104:
    CALL DO_VERIFY;
ENDPROC;

PROCEDURE DO_VERIFY_EOL USES GV,DO_VERIFY;
    VERIFYEOL[0] = 1;
    CALL DO_VERIFY;
ENDPROC;

PROCEDURE DO_PROGRAM_RLOCK USES GV,DO_EXIT,POLL_PROGRAM;
    DATAINDEX = 0;
    INTEGER IREPEAT_2;
    FOR IREPEAT_2 = NUMBEROFSDTILES - 1 TO 0 STEP -1;
        FOR I = 1 TO 8;
            IRSTOP IRPAUSE;
            DRSTOP DRPAUSE;
            IRSCAN 8, $89;
            DRSCAN 26, RLOCK[(DATAINDEX+25)..DATAINDEX];
            WAIT IDLE, 3 CYCLES;
            DATAINDEX = (DATAINDEX+26);
        NEXT I;
    NEXT IREPEAT_2;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8c;
    WAIT IDLE, 3 CYCLES;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_105;
    STATUS = 10;
    PRINT "Failed to enable FPGA Array.";
    UNIQUEEXITCODE = 32862;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_105:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_READ_IDCODE USES READ_IDCODE_ONLY;
    WAIT RESET, 5 CYCLES;
    CALL READ_IDCODE_ONLY;
    EXIT 0;
ENDPROC;


CRC CDB7;
